---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentic-search
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agentic-search
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: agentic-search
    spec:
      containers:
        - name: agentic-search
          image: ghcr.io/prefeitura-rio/app-agentic-search:latest
          ports:
            - containerPort: 80
          envFrom:
            - secretRef:
                name: agentic-search-secrets
          # Adicione recursos para garantir que o pod tenha CPU e memória suficientes
          # Isso pode ajudar a evitar lentidão devido a restrições de recursos
          resources:
            requests:
              cpu: "200m"  # Solicita 0.2 de um core de CPU
              memory: "256Mi" # Solicita 256 Megabytes de memória
            limits:
              cpu: "500m"  # Limita a 0.5 de um core de CPU (permite bursts)
              memory: "512Mi" # Limita a 512 Megabytes de memória
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
      restartPolicy: Always

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: agentic-search
spec:
  selector:
    app: agentic-search
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agentic-search
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: 'letsencrypt'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    # Definindo um timeout maior para permitir que a aplicação responda
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "120" # Tempo para o Nginx conectar ao seu serviço (pod)
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"    # Tempo para o Nginx enviar a requisição completa ao seu serviço
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"    # Tempo para o Nginx ler a resposta completa do seu serviço
spec:
spec:
  tls:
    - hosts:
        - agentic-search.staging.dados.rio
      secretName: agentic-search-tls
  rules:
    - host: agentic-search.staging.dados.rio
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: agentic-search
                port:
                  number: 80
